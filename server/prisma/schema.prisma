// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id       @default(uuid())
  publicId          Int       @unique   @default(autoincrement())
  email             String    @unique
  schoolEmail       String?   @unique
  username          String    @unique
  password          String
  emailVerified     Boolean   @default(false)
  verificationToken String? @unique
  school            School?   @relation(fields: [schoolId], references: [id])
  schoolId          String?
  studentVerified   Boolean   @default(false)
  isPremium         Boolean   @default(false)
  xp                Int       @default(0)
  level             Int       @default(1)
  createdAt         DateTime  @default(now())

  games  Game[]
}

model School {
  id        String     @id @default(uuid())
  name      String     @unique
  acronym   String     @unique
  domain    String     @unique
  badge     String // url to badge image or icon
  
  users     User[]
}

model Game {
  id          String    @id @default(uuid())
  player      User      @relation(fields: [playerId], references: [id])
  playerId    String
  campus      String?   // Track which campus was played
  startedAt   DateTime  @default(now())
  completedAt DateTime?
  grade       String?
  xpEarned    Int?
  
  scores      Score[]
}

model Score {
  id              String   @id @default(uuid())
  game            Game     @relation(fields: [gameId], references: [id])
  gameId          String
  distance        Float
  points          Int
  timeLeft        Int
  roundNumber     Int
  actualLocation  Int[]
  guessedLocation Int[]
}
